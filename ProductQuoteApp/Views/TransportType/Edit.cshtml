@model ProductQuoteApp.Persistence.TransportType

@{
    ViewBag.Title = @ProductQuoteApp.Resources.Resources.ActEdit;
}

<!--<h2>View</h2>-->


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h3>@ProductQuoteApp.Resources.Resources.EtyTransportType</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TransportTypeID)

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @maxlength = "200" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PositionQuantityFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.PositionQuantityFrom, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.TextBoxFor(model => model.PositionQuantityFrom, "{0:N0}", new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.EditorFor(model => model.PositionQuantityFrom, new { htmlAttributes = new { @class = "form-control", @type = "text" } })


                @*@Html.EditorFor(model => model.PositionQuantityFrom, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.TextBox("PositionQuantityFrom", string.Format("{0:N0}", Model.PositionQuantityFrom))*@
                @*@Html.TextBox("PositionQuantityFrom", string.Format("{0:N0}", Model.PositionQuantityFrom), new { htmlAttributes = new { @class = "form-control" } })*@
                @*<input class="form-control text-box single-line" data-val="true" data-val-number="El campo Neto Min. (Kg) debe ser numérico" data-val-required="Debe ingresar Neto Min. (Kg)" id="PositionQuantityFrom" name="PositionQuantityFrom" type="number" />*@
                @*@Html.TextBoxFor(model => model.PositionQuantityFrom, "{0:N0}", new { type = "number", htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.PositionQuantityFrom, "", new { @class = "text-danger" })
                @*@Html.TextBoxFor(model => model.PositionQuantityFrom, "{0:N0}")*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PositionQuantityTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PositionQuantityTo, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                @Html.ValidationMessageFor(model => model.PositionQuantityTo, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.Stackable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stackable)
                @Html.ValidationMessageFor(model => model.Stackable, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.FreightTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FreightTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FreightTypeID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@ProductQuoteApp.Resources.Resources.ActSave class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(@ProductQuoteApp.Resources.Resources.ActBackToList, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
